/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package b01_actors;

import akka.actor.typed.*;
import akka.actor.typed.javadsl.Behaviors;
import b01_actors.actors.AggregatorActor;
import b01_actors.aux.EngineConfig;
import b01_actors.messages.AggregatorMessage;
import b01_actors.messages.AggregatorResponse;
import b01_actors.pojo.Result;
import b01_actors.messages.AggregatorCommand;

import java.time.Duration;
import java.util.Arrays;
import java.util.Map;
import java.util.concurrent.CompletionStage;

import org.slf4j.LoggerFactory;

public class App {

    public static void main(String[] args) {

        LoggerFactory.getLogger(App.class).info("Message sent");
        ActorSystem<java.lang.Void> sys = ActorSystem.create(Behaviors.empty(), "root");
        ActorRef<AggregatorMessage> ref = sys.systemActorOf(AggregatorActor.create(), "aggregator", Props.empty());

        CompletionStage<AggregatorResponse> cs = akka.actor.typed.javadsl.AskPattern.ask(ref, (reply) -> {
            return new AggregatorCommand("apple", Arrays.asList(new EngineConfig("google"), new EngineConfig("yahoo"), new EngineConfig("yandex")), reply);
        }, Duration.ofSeconds(10), sys.scheduler());

        try {
            AggregatorResponse resp = cs.toCompletableFuture().join();
            for (Map.Entry<String, Result[]> res : resp.results.entrySet()) {
                System.out.println(res.getKey());
                for (Result v : res.getValue()) {
                    System.out.println("  " + v.title);
                }
            }
        } finally {
            sys.terminate();
        }
    }
}
